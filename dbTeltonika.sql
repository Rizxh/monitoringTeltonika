DROP TABLE RIWAYAT

create table RIWAYAT (
   ROUTE_ID             INT                  ,
   ID_ALAT				SERIAL,
   IMEI					VARCHAR(50)			  ,
   ID_SEWA				SERIAL,	
   NAMA_ALAT			VARCHAR(50),
   STATUSALAT2          VARCHAR(10),
   SUHU2                DECIMAL,
   LOG_LATITUDE         DECIMAL(8,6),
   LOG_LONGITUDE        DECIMAL(9,6),
   ACTION_TYPE_FROM_ALAT VARCHAR(50),
   constraint FK_RIWAYAT_PERJALANAN foreign key (ROUTE_ID)
      references PERJALANAN (ROUTE_ID) ON DELETE CASCADE,
   constraint FK_RIWAYAT_ALAT foreign key (IMEI)
   	  references ALAT (IMEI) ON DELETE CASCADE

);

SELECT * FROM ALAT INNER JOIN SEWA ON ALAT.ID_SEWA = SEWA.ID_SEWA INNER JOIN PERJALANAN ON SEWA.ID_SEWA = PERJALANAN.ID_SEWA 
SELECT * FROM RIWAYAT
SELECT * FROM PERJALANAN
SELECT * FROM SEWA

DELETE FROM ALAT

CREATE OR REPLACE FUNCTION log_alat_changes()
RETURNS TRIGGER AS $$
BEGIN
    -- Log insert operation
    IF (TG_OP = 'INSERT') THEN
        INSERT INTO RIWAYAT (ROUTE_ID, ID_ALAT, IMEI, ID_SEWA, NAMA_ALAT, STATUSALAT2, SUHU2, LOG_LATITUDE, LOG_LONGITUDE, ACTION_TYPE_FROM_ALAT)
        SELECT 
			PERJALANAN.route_id,
			NEW.id_alat,
			NEW.imei,
			NEW.id_sewa,
			NEW.namaalat,
			NEW.statusalat,
			NEW.suhu,
			NEW.latitude,
			NEW.longitude, 'INSERT'
		FROM ALAT INNER JOIN SEWA ON ALAT.ID_SEWA = SEWA.ID_SEWA INNER JOIN PERJALANAN ON SEWA.ID_SEWA = PERJALANAN.ID_SEWA WHERE SEWA.ID_SEWA = PERJALANAN.ID_SEWA ;
        RETURN NEW;
    -- Log update operation
    ELSIF (TG_OP = 'UPDATE') THEN
        INSERT INTO RIWAYAT (ROUTE_ID, ID_ALAT, IMEI, ID_SEWA, NAMA_ALAT, STATUSALAT2, SUHU2, LOG_LATITUDE, LOG_LONGITUDE, ACTION_TYPE_FROM_ALAT)
         SELECT 
			PERJALANAN.route_id,
			NEW.id_alat,
			NEW.imei,
			NEW.id_sewa,
			NEW.namaalat,
			NEW.statusalat,
			NEW.suhu,
			NEW.latitude,
			NEW.longitude, 'INSERT'
		FROM ALAT INNER JOIN SEWA ON ALAT.ID_SEWA = SEWA.ID_SEWA INNER JOIN PERJALANAN ON SEWA.ID_SEWA = PERJALANAN.ID_SEWA WHERE SEWA.route_id = PERJALANAN.route_id ;
        RETURN NEW;
    -- Log delete operation
    ELSIF (TG_OP = 'DELETE') THEN
         DELETE FROM RIWAYAT
    	 WHERE imei = OLD.imei;
    RETURN OLD;
    END IF;
END;
$$ LANGUAGE plpgsql;

-- Insert into ALAT table
INSERT INTO ALAT (IMEI, ID_SEWA, NAMAALAT, STATUSALAT, LATITUDE, LONGITUDE, SUHU) 
VALUES 
('123456789012345', 1, 'Teltonika1', 'Aktif', -6.200000, 106.816666, 3.5),
('987654321098765', 2, 'Teltonika2', 'Non-Aktif', -7.250000, 112.750000, 4.0),
('135792468013579', 3, 'Teltonika3', 'Aktif', -6.914744, 107.609810, 2.5),
('246801357924680', 4, 'Teltonika4', 'Aktif', -7.559722, 110.821389, 3.9),
('975312468024680', 5, 'Teltonika5', 'Non-Aktif', -6.990000, 110.420000, 4.2);


CREATE TRIGGER log_alat_changes_trigger
AFTER INSERT OR UPDATE OR DELETE
ON ALAT 
FOR EACH ROW
EXECUTE FUNCTION log_alat_changes();
